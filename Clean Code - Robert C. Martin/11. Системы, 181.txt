Города работают, потому что есть люди которые конролируют общие вещи. А есть, которые управляют частными вещами, и им даже не надо знать общую картину.
В это главе поговорим и чистом коде на уровне системы.
Сначала строители сроят каркас, потом отделку - садия инициализации. И уходят. А потом приходят новые люди и начинают в здании работать.
В программировании также - сначала конструируются основные объекты и склеиваются зависимости.
 - Отложенная инициализация - когда мы не создаем объект до момента его первого использования.
Но в этом случае объект выполняет две задачи, нарушается принцип ЕО.
Процесс конструирования объектов и установления связей должен быть отделен от нормальной работы приложения.
 - Отделение main (стр. 184). Всё конструирование должно произойти в main. И сконсруированные объекты переданы в приложение. Приложение ничего не знает о том, что происходит в main.
 - Фабрика. Приложение выбирает время создания айтема, но оно изолировано от подробностей построения айтема. А сам айем генерится в ItemFactoryImpl.
 - Обращение контроля - внедрение зависимостей (Inversion of Control - Dependency Injection. Вторичные обязанности передаются в другие объекты.
Объект передает управление по созданию зависимостей уполномоченному механизму: метод main либо контейнер.
Контейнер создает объекты и впихивает их в класс с помощью конструктора.
Нельзя потсроить правильную систему с первого раза. Сначала делается маленькая, овечающая поребностям. А потом через тестирование и рефакторинг обеспечиваем работу.
Аритектура программных систем может развиваться последовательно, если обеспечить правильное разделение оветственности.
Стр. 186 - 199 - не понял.