public static const
private static cost
private fields
public method
  private method - сразу за вызывающим методом
Классы должны быть компактными.
Классы должны быть ешё компактнее.
Для измерения метода мы подсчитываем 'ответственности'.
Имя класса должно описывать его отвественности.
 - SRP - принцип единой ответственности. Класс может иметь одну и только одну причину для изменения. Должны иметь одну ответсвенность. В коде автор выносит три метода, которые управляют версиями, из класса DashBoard в класс Version.
Программисты часть пишут рабочий код и потом приступают к следующей задаче. А надо возваращаться и делать рефакторинг.
Программисты боятся, что если наплодить много мелких классов, о будет рудно разобраться.
Преимущества маленьких классов:
- уменьшает дублирование кода; можно переиспользовать меоды маленькиого класса
- когда разработчик заходит в маленький класс, он видит зону ответсвенности только этого класса; в противном случае - ему придется разбираться с множеством аспектов многоелевого класса
 - Связность
Это когда каждый метод работает с каждой перемнной класса - высокая связанность.
Автор рекомендует поддерживать высокую связанность. Если 5 переменных используются в одних методах, а другие 5 переменных - в других методах - можно создать ещё два класса, у которы будет высокая связанность (стр. 171 пример).
Стр. 176 - вместо класса с большим количеством методов, создаются одклассы, которые овечают только за свою функциональность. Частные приватные методы уходят в подклассы, общие приваные методы остаюся в клавном классе.
 - Принцип открытости/закрытости - классы должны быть открыты для расширений, но закрыты для модификаций.
Новая функциональность должна реализовываться расширением системы, а не внесением изменений в существующий код.
 - Принцип обращения зависимостей (dependency inversion:
- если в большом методе есть несколько строк - можно вынести в отдельный приватный метод
- этот отделбный приватный метод - можно создать класс с этим методом
- а потом отнаследовать это класс от интерфейса
 и тогда большой метод будет зависеть от абстракции. И например в тестах, мы можем мокировать эту абстракцию как угодно.